				Example of a presentation of L(5,2)		The initial presentation was: R  1:   AAB  R  2:   aBB This presentation has length 6 and is freely reduced.The rewritten initial presentation is: R  1:   AAB  R  2:   Abb                     The data appears consistent.                     The presentation is realizable.                    This manifold is closed.|************************************   REPORT   ****************************************|Presentation 1  of Component 1:  2 Generator(s)  Length  6  From Presentation 1  IPpresents the Lens space L(5,2).R  1)    AAB R  2)    Abb The program performed 0 automorphism(s), formed 0 band sum(s)and examined 2 diagram(s). Left to do 3.				Example of a presentation of L(5,1)				The initial presentation was: R  1:   AAABB  R  2:   AABBB This presentation has length 10 and is freely reduced.                    The data appears consistent.                     The presentation is realizable.                    This manifold is closed.|************************************   REPORT   ****************************************|Presentation 1  of Component 1:  2 Generator(s)  Length  10  From Presentation 1  IPpresents the Lens space L(5,1).R  1)    AAABB R  2)    AABBB The program performed 1 automorphism(s), formed 0 band sum(s)and examined 2 diagram(s). Left to do 3.			Example of removal of a pair of separating vertices.Presentation 1  of Component 1:  3 Generator(s)  Length  14  From Presentation 1  IPvertex 'A' and vertex 'a' separate the diagram.R  1)    AABCaBacAcbabC 	The program removed the separating vertices by sliding C -> CAPresentation 2  of Component 1:  3 Generator(s)  Length  14  From Presentation 1  Ltvia level transformations of sep_pairs.R  1)    AAABCBaaccbabC The program performed 1 automorphism(s), formed 0 band sum(s)and examined 2 diagram(s). Left to do 0.					Example of a valence-two annulus.The initial presentation was: R  1:   AAABAAB  R  2:   BCbc  R  3:   CDcd  R  4:   BD This presentation has length 17 and is freely reduced.                    The data appears consistent.                     The presentation is realizable.                    However, the realization is not unique because an annulus exists.                    These relators separate the Heegaard surface.<------------------------------------   REPORT   --------------------------------------->Presentation 1  of Component 1:  4 Generator(s)  Length  17  From Presentation 1  IPThere exists an annulus which swallows vertice(s) { a,A }and otherwise follows the curve:B R  1)    AAABAAB R  2)    BCbc R  3)    CDcd R  4)    BD The program performed 0 automorphism(s), formed 0 band sum(s)and examined 1 diagram(s). Left to do 0.	_________________________________________________________________________________________	Here is a rather long example, which illustrates many of the things the program does. Relators 1 -> 12 below are a Wirtinger presentation of the (-2,3,7) pretzel knot with one relator for each crossing. The program's routine Wirtinger() recognized that this presentation was probably the presentation of a knot, with meridian M = A, and longitude L = IJKGHAEABCDGaaaaaaaaaaaa, and it offered the opportunity to perform Dehn surgery on the knot. I choose to perform 18 surgery, so Wirtinger() appended Relator 13, which represents the additional surgery relation, to the presentation._________________________________________________________________________________________The initial presentation was: R  1:   LGag  R  2:   FAga  R  3:   DGeg  R  4:   GEhe  R  5:   EHfh  R  6:   HAia  R  7:   AIbi  R  8:   IBjb  R  9:   BJcj  R 10:   JCkc  R 11:   CKdk  R 12:   KDld  R 13:   AIJKGHAEABCDGaaaaaaaaaaaaAAAAAAAAAAAAAAAAA _________________________________________________________________________________________	The program then freely reduced this presentation, and used its Canonical_Rewrite() routine to rewrite the presentation. Next, I elected to have the program reduce and simplify this presentation, and I opted to have it do so by performing bandsums and by eliminating all appearances of primitives among the relators. Then I put the program into its MicroPrint mode so that it would save the following log of its activities._________________________________________________________________________________________This presentation has length 90 and freely reduces to length 66.The rewritten initial presentation is: R  1:   AAAAAABCDEAFAGBHIJ  R  2:   ABKb  R  3:   AGaj  R  4:   ALaB  R  5:   AjeJ  R  6:   BCbf  R  7:   BfgF  R  8:   CHcK  R  9:   CHdh  R 10:   DIdh  R 11:   DIei  R 12:   EJei  R 13:   FgLG _________________________________________________________________________________________	Next, the program performed the following automorphisms on the initial presentation to reduce it to minimal length, rewrote the resulting presentation, and saved it as Presentation 1. Then, the program discovered that the Whitehead graph of Presentation 1 had a pair of separating vertices, and so the program called its routine Level_Transformations() in an attempt to slide components of the separation around in order to arrive at a minimal length presentation without any pairs of separating vertices in its Whitehead graph._________________________________________________________________________________________	Do Aut 1 time(s): B->aB  F->aFA G->aGA L->aLA Do Aut 1 time(s): C->bC  K->bKB Rewrote the presentation using the substitution: AGBCDEFHIJKLSaved the current presentation as: Presentation 1                    The Whitehead graph has a pair of separating vertices.Performed a level-transformation by sliding vertice(s):{K}along a path represented by: ato obtain the presentation: R  1:   AAAAABCDEAFGHIJ  R  2:   AgeFE  R  3:   BHchg  R  4:   AjdJ  R  5:   BHbaK  R  6:   CIch  R  7:   CIdi  R  8:   DJdi  R  9:   EfLF  R 10:   Alg  R 11:   Bge  R 12:   K  R 13:   Fj Performed a level-transformation by sliding vertice(s):{l}along a path represented by: aGto obtain the presentation: R  1:   AAAAABCDEAFGHIJ  R  2:   AgeFE  R  3:   BHchg  R  4:   AjdJ  R  5:   BHbaK  R  6:   CIch  R  7:   CIdi  R  8:   DJdi  R  9:   EfLgAF  R 10:   l  R 11:   Bge  R 12:   K  R 13:   Fj _________________________________________________________________________________________	After performing two slides, the program found a presentation without any pairs of separating vertices in its Whitehead graph, and saved the resulting rewritten presentation as Presentation 2. Then the program verified that this presentation is realizable._________________________________________________________________________________________Rewrote the presentation using the substitution: ABCDEFGHIJlKSaved the current presentation as: Presentation 2                    The data appears consistent.                     After some level transformations:                    The presentation is realizable.                    These relators separate the Heegaard surface.Started with presentation 2, Length 59: R  1:   AAAAABCDEAFGHIJ  R  2:   AFEfKg  R  3:   ABhbL  R  4:   AgeFE  R  5:   BHchg  R  6:   AjdJ  R  7:   CIch  R  8:   CIdi  R  9:   DJdi  R 10:   Bge  R 11:   Fj  R 12:   K  R 13:   L  _________________________________________________________________________________________	Next, the program starts looking for primitive relators which can be used to reduce the genus of M; looking first for defining relators of length 1 and 2._________________________________________________________________________________________Relator 13 is a defining relator which was used to eliminate generator L.The presentation is currently: R  1:   AAAAABCDEAFGHIJ  R  2:   AFEfKg  R  3:   ABhb  R  4:   AgeFE  R  5:   BHchg  R  6:   AjdJ  R  7:   CIch  R  8:   CIdi  R  9:   DJdi  R 10:   Bge  R 11:   Fj  R 12:   K Relator 12 is a defining relator which was used to eliminate generator K.The presentation is currently: R  1:   AAAAABCDEAFGHIJ  R  2:   AFEfg  R  3:   ABhb  R  4:   AgeFE  R  5:   BHchg  R  6:   AjdJ  R  7:   CIch  R  8:   CIdi  R  9:   DJdi  R 10:   Bge  R 11:   Fj Relator 11 is a defining relator which was used to eliminate generator F.Rewrote the relators by replacing J with F.The presentation is currently: R  1:   AAAAABCDEAFGHIF  R  2:   AFEfg  R  3:   ABhb  R  4:   AgeFE  R  5:   BHchg  R  6:   AfdF  R  7:   CIch  R  8:   CIdi  R  9:   DFdi  R 10:   Bge _________________________________________________________________________________________	When there are no defining relators of length 1 or 2, the program searches the relators in random order looking for any other defining relators. If it finds a defining relator, the program uses that relator to eliminate a generator from the presentation. And, if the defining relator could be used to eliminate more than one generator, then the program chooses a generator, at random, from among the possibilities, and uses the defining relator to eliminate the chosen generator from the presentation._________________________________________________________________________________________Relator 10 is a defining relator which was used to eliminate generator B.Rewrote the relators by replacing I with B.The presentation is currently: R  1:   AAAAAEGCDEAFGHBF  R  2:   AFEfg  R  3:   AEGhge  R  4:   AgeFE  R  5:   EGHchg  R  6:   AfdF  R  7:   CBch  R  8:   CBdb  R  9:   DFdb  _________________________________________________________________________________________	After eliminating generator B, the program finds that the presentation no longer has minimal length; so it performs the following automorphisms to again reduce the presentation to minimal length._________________________________________________________________________________________Do Aut 1 time(s): H->gH  Do Aut 1 time(s): G->eG  H->eH  Do Aut 1 time(s): E->AEa F->Fa  H->AH  Do Aut 1 time(s): A->fAF E->fE  G->fG  H->fH  4 automorphism(s) reduced the length to 46.The presentation is currently: R  1:   AAAAGCDfAEFeHB  R  2:   EfgAE  R  3:   Gh  R  4:   gFE  R  5:   HchEf  R  6:   Ad  R  7:   CBchaG  R  8:   CBdb  R  9:   DaFdb Rewrote the presentation using the substitution: AHCDFeBGSaved the current presentation as: Presentation 3Started with presentation 3, Length 46: R  1:   AAAABCDEAFefGH  R  2:   AGChcb  R  3:   AFFEb  R  4:   AdHDE  R  5:   CgefG  R  6:   CHdh  R  7:   BfE  R  8:   Ad  R  9:   Bg Relator 8 is a defining relator which was used to eliminate generator A.Swapped Relator 8 with Relator 9 and reduced the number of relators.Rewrote the relators by replacing H with A.Free reductions reduced the length of the current presentation from 44 to 42.The reduced presentation is: R  1:   DDDDBCDEDFefGA  R  2:   DGCacb  R  3:   DFFEb  R  4:   ADE  R  5:   CgefG  R  6:   CAda  R  7:   BfE  R  8:   Bg Relator 8 is a defining relator which was used to eliminate generator G.The presentation is currently: R  1:   DDDDBCDEDFefBA  R  2:   DBCacb  R  3:   DFFEb  R  4:   ADE  R  5:   CbefB  R  6:   CAda  R  7:   BfE Relator 2 is a defining relator which was used to eliminate generator D.Swapped Relator 2 with Relator 7 and reduced the number of relators.Rewrote the relators by replacing F with D.Free reductions reduced the length of the current presentation from 70 to 52.The reduced presentation is: R  1:   BCAAAABCAcbEBCAcbDedBA  R  2:   BdE  R  3:   CAcbDDE  R  4:   ABCAcbE  R  5:   CbedB  R  6:   CABCacba Do Aut 1 time(s): B->Bc  Do Aut 1 time(s): D->BDb E->BEb Do Aut 1 time(s): B->Ba  C->Ca  E->Ea  3 automorphism(s) reduced the length to 35.The presentation is currently: R  1:   AAABEDAedAcAB  R  2:   cBadE  R  3:   DDEbC  R  4:   BEbA  R  5:   Ced  R  6:   BabaC Rewrote the presentation using the substitution: abCDESaved the current presentation as: Presentation 4Started with presentation 4, Length 35: R  1:   AAABACADEAdeB  R  2:   ABACb  R  3:   AdEcb  R  4:   BCDDE  R  5:   AbeB  R  6:   Ced Relator 1 is a defining relator which was used to eliminate generator C.Swapped Relator 1 with Relator 6 and reduced the number of relators.Rewrote the relators by replacing E with C.Free reductions reduced the length of the current presentation from 66 to 60.The reduced presentation is: R  1:   abaaabCDacdacd  R  2:   aabCDacdab  R  3:   AdCADCAdcBAAABAb  R  4:   BabaaabCDacdaDDC  R  5:   AbcB Do Aut 1 time(s): B->Ba  C->Ca  Do Aut 1 time(s): B->Ba  D->AD  2 automorphism(s) reduced the length to 50.The presentation is currently: R  1:   babCDcdacd  R  2:   bCDcdb  R  3:   daCADCdcBABAbA  R  4:   BababCDcdaDADCa  R  5:   AbAcB Rewrote the presentation using the substitution: abCDSaved the current presentation as: Presentation 5Started with presentation 5, Length 50: R  1:   ABABCDcdADaDCAb  R  2:   ABABCDcdAcaDAb  R  3:   ABCDcdAcdB  R  4:   BBCDcd  R  5:   ABCAb Relator 5 is a defining relator which was used to eliminate generator C.Rewrote the relators by replacing D with C.Free reductions reduced the length of the current presentation from 78 to 56.The reduced presentation is: R  1:   BaCAbABcACaC  R  2:   ABBaCAbABcAAbABaCAb  R  3:   BaCAbABcAAbABcB  R  4:   BaBaCAbABc Do Aut 1 time(s): A->AB  Do Aut 1 time(s): C->AC  2 automorphism(s) reduced the length to 48.The presentation is currently: R  1:   CAABBcBACbC  R  2:   BBCAABBcBAABCAA  R  3:   CAABBcBAABBcaB  R  4:   aCAABBca Rewrote the presentation using the substitution: CAbSaved the current presentation as: Presentation 6Started with presentation 6, Length 48: R  1:   AABACCAbCCAAbCC  R  2:   AABACCAABcAbCC  R  3:   AABACbabbCC  R  4:   AABccbCC _________________________________________________________________________________________	Finally, the program has obtained a presentation in which none of the relators is a primitive, or a proper power of a free generator. Since this is not a balanced presentation of a closed manifold, the program can't dualize the presentation, and so it starts looking for ways to form bandsums of pairs of relators, in order to reduce thelength of the presentation._________________________________________________________________________________________	Checked whether any Relators are primitives or proper powers. . .Replaced Relator 1 with the following bandsum of Relator 1 and Relator 2: R  1:   CbabCCA The current presentation is: R  1:   CbabCCA  R  2:   AABACCAABcAbCC  R  3:   AABACbabbCC  R  4:   AABccbCC Do Aut 1 time(s): A->Ac  B->CB  Checked whether Relator 1 is a primitive or a proper power. . .Relator 1 is a primitive.Do Aut 1 time(s): A->Ac  B->CB  _________________________________________________________________________________________	After performing the above automorphism, the total number of appearances of Cand c in Relator 1 has been reduced to 1, and so Relator 1 has become a defining relator._________________________________________________________________________________________	Relator 1 is a defining relator which was used to eliminate generator C.Swapped Relator 1 with Relator 4 and reduced the number of relators.Free reductions reduced the length of the current presentation from 73 to 59.The reduced presentation is: R  1:   AbabABAbabAbabAB  R  2:   AbabABABABAbabABAbabAAbabAB  R  3:   AbabABAbabAbabAB _________________________________________________________________________________________	The program now discovers that Relator 3 is a cyclic conjugate of Relator 1 and so it deletes Relator 3 from the presentation._________________________________________________________________________________________	Deleted 1 duplicated relator(s) from the presentation to get: R  1:   AbabABAbabAbabAB  R  2:   AbabABABABAbabABAbabAAbabAB Do Aut 1 time(s): A->Ab  Do Aut 1 time(s): B->AB  Rewrote the presentation using the substitution: baSaved the current presentation as: Presentation 7Started with presentation 7, Length 36: R  1:   AAABBAbABBAbbbABBAbABB  R  2:   AABBAbABBAbABB Checked whether any Relators are primitives or proper powers. . ._________________________________________________________________________________________	This presentation is now a balanced presentation of a closed orientable 3-manifold, and so the program can dualize the current presentation in order to look for simpler presentations._________________________________________________________________________________________Dualized the current relators to get the following dual relators: R  1:   ABABAABAABBAABA  R  2:   abaabaBAABAABaBAABAAB Checked whether any Relators are primitives or proper powers. . .Do Aut 1 time(s): B->Ba  Do Aut 1 time(s): A->Ab  2 automorphism(s) reduced the length to 22.The presentation is currently: R  1:   BAABaBAA  R  2:   aaBAABaBaBAABa Rewrote the presentation using the substitution: aBSaved the current presentation as: Presentation 8Started with presentation 8, Length 22: R  1:   AAABaaBABABaaB  R  2:   AAbAAbab Checked whether any Relators are primitives or proper powers. . ._________________________________________________________________________________________	After verifying that neither of the relators in Presentation 8 are primitives, orproper powers of free generators, the program discovers that the Whitehead graph ofPresentation 8 has a pair of separating vertices; so the program calls Level_Transformations() to see if it can transform Presentation 8 into a minimal length presentation without any pairs of separating vertices in its Whitehead graph. Level_Transformations() manages to find two such presentations, which the program saves as Presentation 9 and Presentation 10._________________________________________________________________________________________	Calling Level_Transformations() for the following presentation: R  1:   AAABaaBABABaaB  R  2:   AAbAAbab Performed a level-transformation by sliding vertice(s):{B}along a path represented by: AAto obtain the presentation: R  1:   AAABBAAABAAABBAA  R  2:   bbaaab Rewrote the presentation using the substitution: ABSaved the current presentation as: Presentation 9Performed a level-transformation by sliding vertice(s):{B}along a path represented by: ato obtain the presentation: R  1:   AABaaaBBBaaaB  R  2:   AAbAAAbbA Rewrote the presentation using the substitution: aBSaved the current presentation as: Presentation 10Performed a level-transformation by sliding vertice(s):{b}along a path represented by: Ato obtain the presentation: R  1:   AABaaaBBBaaaB  R  2:   AAbAAAbbA Rewrote the presentation using the substitution: aBPerformed a level-transformation by sliding vertice(s):{b}along a path represented by: aato obtain the presentation: R  1:   AAABBAAABAAABBAA  R  2:   bbaaab Rewrote the presentation using the substitution: ABStarted with presentation 9, Length 22: R  1:   AAAAABBAAABAAABB  R  2:   AAABBB Checked whether any Relators are primitives or proper powers. . .Dualized the current relators to get the following dual relators: R  1:   AABAAAABAAABAA  R  2:   AABABAAB Do Aut 3 time(s): B->Ba  Do Aut 1 time(s): A->Ab_________________________________________________________________________________________	The program is checking whether Relator 1 is a primitive by attempting to reduce Relator 1 to a defining relator for one of the generators. Note: Here the program recognizes that the automorphism B->Baaa can be performed, and it performs this automorphism instead of performing B->Ba 3 times. (Doing this can make performing automorphisms significantly more efficient when generators start appearing with large exponents.)_________________________________________________________________________________________	Checked whether any Relators are primitives or proper powers. . .Relator 1 is a primitive._________________________________________________________________________________________	The program has just recognized that this is a 2-generator, 2-relator presentation in which Relator 1 is a primitive, so the program calls the routine Lens_Space_D(), to check whether the manifold in question might be a lens space. Lens_Space_D() verifies that the manifold is indeed a lens space, and then determines that the lens space is homeomorphic to L(18,5)._________________________________________________________________________________________	The current presentation is a two generator, two relator presentation of a closedmanifold M, for which one of the relators is a primitive. Thus M is a lens space.In particular, M is the lens space L(18,5)._________________________________________________________________________________________	The program next realizes that the current relators were obtained by dualizing and reverts to the original set of relators, which it rewrites and then discovers is already on file as Presentation 8. So, the program appends a message to Presentation 8 indicating that Presentation  8 represents the lens space L(18,5), and then the program stops running this example because it has recognized all of the components of the original manifold._________________________________________________________________________________________Rewrote the presentation using the substitution: AB_________________________________________________________________________________________	Finally, the program prints the following report._________________________________________________________________________________________		<------------------------------------   REPORT   --------------------------------------->Presentation 1  of Component 1:  12 Generator(s)  Length  59  From Presentation 1  IPvertex 'a' and vertex 'B' separate the diagram.R  1)    AAAAABCDEAFGHIJ R  2)    AgeFE R  3)    BHchg R  4)    AjdJ R  5)    BHbK R  6)    CIch R  7)    CIdi R  8)    DJdi R  9)    EfLF R 10)    Alg R 11)    Bge R 12)    AK R 13)    Fj Presentation 2  of Component 1:  12 Generator(s)  Length  59  From Presentation 1  Ltvia level transformations of sep_pairs.R  1)    AAAAABCDEAFGHIJ R  2)    AFEfKg R  3)    ABhbL R  4)    AgeFE R  5)    BHchg R  6)    AjdJ R  7)    CIch R  8)    CIdi R  9)    DJdi R 10)    Bge R 11)    Fj R 12)    K R 13)    L Presentation 3  of Component 1:  8 Generator(s)  Length  46  From Presentation 2  FPR  1)    AAAABCDEAFefGH R  2)    AGChcb R  3)    AFFEb R  4)    AdHDE R  5)    CgefG R  6)    CHdh R  7)    BfE R  8)    Ad R  9)    Bg Presentation 4  of Component 1:  5 Generator(s)  Length  35  From Presentation 3  FPR  1)    AAABACADEAdeB R  2)    ABACb R  3)    AdEcb R  4)    BCDDE R  5)    AbeB R  6)    Ced Presentation 5  of Component 1:  4 Generator(s)  Length  50  From Presentation 4  FPR  1)    ABABCDcdADaDCAb R  2)    ABABCDcdAcaDAb R  3)    ABCDcdAcdB R  4)    BBCDcd R  5)    ABCAb Presentation 6  of Component 1:  3 Generator(s)  Length  48  From Presentation 5  FPR  1)    AABACCAbCCAAbCC R  2)    AABACCAABcAbCC R  3)    AABACbabbCC R  4)    AABccbCC Presentation 7  of Component 1:  2 Generator(s)  Length  36  From Presentation 6  DDR  1)    AAABBAbABBAbbbABBAbABB R  2)    AABBAbABBAbABB Presentation 8  of Component 1:  2 Generator(s)  Length  22  From Presentation 7  BCvertex 'A' and vertex 'a' separate the diagram.R  1)    AAABaaBABABaaB R  2)    AAbAAbab Presentation 9  of Component 1:  2 Generator(s)  Length  22  From Presentation 8  Ltpresents the Lens space L(18,5).R  1)    AAAAABBAAABAAABB R  2)    AAABBB Presentation 10  of Component 1:  2 Generator(s)  Length  22  From Presentation 8  Ltvia level transformations of sep_pairs.R  1)    AAABBBAAABaaB R  2)    AAABAAABB The program performed 32 automorphism(s), examined 12 bandsum(s)and examined 10 diagram(s). Left to do 69._________________________________________________________________________________________	Note that in the line above, the program reports that it examined 12 bandsums whilein the MicroPrint log, it only reported forming 1 bandsum. The discrepency arises becausethe program may examine several possible bandsums before it decides which bandsum it willactually perform. So, in this case, the program considered 12 possibilities before itchose the bandsum it actually performed._________________________________________________________________________________________